# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java
trigger:
- master
steps:
- task: JFrogToolsInstaller@1
  inputs:
    artifactoryConnection: 'server-new'
    cliInstallationRepo: 'jfrog-cli-v2-new'
    installCustomVersion: true
    cliVersion: '2.19.0'
    installExtractors: true
    extractorsInstallationRepo: 'extractors'
- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      $env:MAVEN_OPTS="-Xms1024m -Xmx4096m -client -XX:MaxPermSize=500m  -XX:+TieredCompilation -XX:TieredStopAtLevel=1 -Xverify:none"
      
      write-host "before: $($env:MAVEN_OPTS)"
- task: JFrogMaven@1
  inputs:
    mavenPomFile: 'pom.xml'
    goals: 'install'
    options: -DXms=1024m -DXmx=4096m -DMaxPermSize=500m
    artifactoryResolverService: 'art2'
    targetResolveReleaseRepo: 'manu-libs-release'
    targetResolveSnapshotRepo: 'manu-libs-snapshot'
    artifactoryDeployService: 'art2'
    targetDeployReleaseRepo: 'manu-libs-release'
    targetDeploySnapshotRepo: 'manu-libs-snapshot'
    collectBuildInfo: true
    buildName: '$(Build.DefinitionName)'
    buildNumber: '$(Build.BuildNumber)'
    includeEnvVars: true
- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: 'write-host "$($env:MAVEN_OPTS)"'